{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/DOTNET/DisplayDemo/frontend-dumbapp/src/components/sheet.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport '../styles/table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sheet() {\n  _s();\n  const [data, setData] = useState([]);\n  const [fetching, setFetching] = useState(false);\n  const fetchData = () => {\n    setFetching(true);\n    axios.get('http://localhost:5174/api/sales') // Replace with your backend API URL\n    .then(response => {\n      setData(response.data);\n      setFetching(false);\n      console.log('Data fetched successfully');\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setFetching(false);\n    });\n  };\n  useEffect(() => {\n    // You can optionally add logic to fetch data when the component initially mounts\n  }, []); // Empty dependency array means this effect runs only once, like componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sales Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      disabled: fetching,\n      children: fetching ? 'Fetching...' : 'Fetch Data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Sheet, \"PbDBE3/VthxS/UgpDC/xJCd5+Xk=\");\n_c = Sheet;\nexport default Sheet;\nvar _c;\n$RefreshReg$(_c, \"Sheet\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","Sheet","_s","data","setData","fetching","setFetching","fetchData","get","then","response","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/DOTNET/DisplayDemo/frontend-dumbapp/src/components/sheet.js"],"sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport '../styles/table.css';\n\nfunction Sheet() {\n  const [data, setData] = useState([]);\n  const [fetching, setFetching] = useState(false);\n\n  const fetchData = () => {\n    setFetching(true);\n    axios.get('http://localhost:5174/api/sales') // Replace with your backend API URL\n      .then((response) => {\n        setData(response.data);\n        setFetching(false);\n        console.log('Data fetched successfully');\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n        setFetching(false);\n      });\n  };\n\n  useEffect(() => {\n    // You can optionally add logic to fetch data when the component initially mounts\n  }, []); // Empty dependency array means this effect runs only once, like componentDidMount\n\n  return (\n    <div>\n      <h1>Sales Data</h1>\n      <button onClick={fetchData} disabled={fetching}>\n        {fetching ? 'Fetching...' : 'Fetch Data'}\n      </button>\n      <table>\n        {/* ... Table headers and rows ... */}\n      </table>\n    </div>\n  );\n}\n\nexport default Sheet;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBD,WAAW,CAAC,IAAI,CAAC;IACjBV,KAAK,CAACY,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAAA,CAC1CC,IAAI,CAAEC,QAAQ,IAAK;MAClBN,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;MACtBG,WAAW,CAAC,KAAK,CAAC;MAClBK,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CR,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEE,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnB,OAAA;MAAQoB,OAAO,EAAEb,SAAU;MAACc,QAAQ,EAAEhB,QAAS;MAAAU,QAAA,EAC5CV,QAAQ,GAAG,aAAa,GAAG;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACTnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACjB,EAAA,CAjCQD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAmCd,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}